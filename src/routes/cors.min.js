const express=require("express"),https=require("https"),http=require("http"),{URL:URL}=require("url"),{basicRateLimit:basicRateLimit}=require("../middleware/rateLimit"),router=express.Router(),isValidDomain=e=>![/^localhost$/i,/^127\./,/^10\./,/^172\.(1[6-9]|2[0-9]|3[0-1])\./,/^192\.168\./,/^::1$/,/^fc00:/i,/^fe80:/i].some((s=>s.test(e))),analyzeCorsHeaders=(e,s,o)=>{const t={"access-control-allow-origin":e["access-control-allow-origin"],"access-control-allow-methods":e["access-control-allow-methods"],"access-control-allow-headers":e["access-control-allow-headers"],"access-control-allow-credentials":e["access-control-allow-credentials"],"access-control-max-age":e["access-control-max-age"],"access-control-expose-headers":e["access-control-expose-headers"]},r=[],a=[];let n=100,c=!1;if(!t["access-control-allow-origin"])return{corsEnabled:!1,crossOriginAllowed:!1,headers:[{name:"Access-Control-Allow-Origin",value:"",required:!0,status:"missing"},{name:"Access-Control-Allow-Methods",value:"",required:!1,status:"missing"},{name:"Access-Control-Allow-Headers",value:"",required:!1,status:"missing"},{name:"Access-Control-Allow-Credentials",value:"",required:!1,status:"missing"},{name:"Access-Control-Max-Age",value:"",required:!1,status:"missing"},{name:"Access-Control-Expose-Headers",value:"",required:!1,status:"missing"}],issues:[`Cross-origin request from ${s} to ${o} would be BLOCKED - No CORS headers found`],recommendations:["Add Access-Control-Allow-Origin header to enable CORS"],score:0};const i=[{name:"Access-Control-Allow-Origin",value:t["access-control-allow-origin"]||"",required:!0,status:t["access-control-allow-origin"]?"present":"missing"},{name:"Access-Control-Allow-Methods",value:t["access-control-allow-methods"]||"",required:!1,status:t["access-control-allow-methods"]?"present":"missing"},{name:"Access-Control-Allow-Headers",value:t["access-control-allow-headers"]||"",required:!1,status:t["access-control-allow-headers"]?"present":"missing"},{name:"Access-Control-Allow-Credentials",value:t["access-control-allow-credentials"]||"",required:!1,status:t["access-control-allow-credentials"]?"present":"missing"},{name:"Access-Control-Max-Age",value:t["access-control-max-age"]||"",required:!1,status:t["access-control-max-age"]?"present":"missing"},{name:"Access-Control-Expose-Headers",value:t["access-control-expose-headers"]||"",required:!1,status:t["access-control-expose-headers"]?"present":"missing"}],l=t["access-control-allow-origin"],d=t["access-control-allow-credentials"];if("*"===l)c=!0,"true"===d?(r.push("Security Risk: Cannot use wildcard (*) for Access-Control-Allow-Origin when credentials are allowed"),a.push("Specify exact origins instead of using wildcard when allowing credentials"),i[3].status="invalid",n-=30):(r.push("Security Warning: Wildcard (*) allows any origin to access your resources"),a.push("Consider specifying exact origins instead of wildcard for better security"),n-=15);else if(l&&"null"!==l)try{const e=new URL(s),o=`${e.protocol}//${e.host}`;l===o?(c=!0,r.push(`✅ Cross-origin request ALLOWED: Origin ${s} matches allowed origin`)):(c=!1,r.push(`❌ Cross-origin request BLOCKED: Origin ${s} does not match allowed origin ${l}`),a.push(`Add ${o} to Access-Control-Allow-Origin or use a wildcard (*) if appropriate`),n-=25),new URL(l)}catch{r.push("Invalid Access-Control-Allow-Origin format"),a.push("Ensure Access-Control-Allow-Origin contains a valid URL"),i[0].status="invalid",n-=20}else c=!1,r.push("❌ Cross-origin request BLOCKED: No valid origin specified"),n-=30;const u=t["access-control-allow-methods"];if(u){const e=u.toLowerCase().split(",").map((e=>e.trim())),s=["trace","connect"],o=e.filter((e=>s.includes(e)));o.length>0&&(r.push(`Potentially dangerous HTTP methods allowed: ${o.join(", ")}`),a.push("Avoid allowing TRACE and CONNECT methods unless specifically needed"),n-=10)}else r.push("Access-Control-Allow-Methods header is missing"),a.push("Add Access-Control-Allow-Methods to specify allowed HTTP methods"),n-=10;const h=t["access-control-allow-headers"];h&&"*"===h&&(r.push("Security Warning: Wildcard (*) allows any headers in requests"),a.push("Specify exact header names instead of wildcard for better security"),n-=10);const g=t["access-control-max-age"];if(g){const e=parseInt(g);isNaN(e)||e<0?(r.push("Invalid Access-Control-Max-Age value"),a.push("Access-Control-Max-Age should be a positive integer (seconds)"),i[4].status="invalid",n-=10):e>86400&&(r.push("Access-Control-Max-Age is very high (>24 hours)"),a.push("Consider using a shorter cache time for preflight requests"),n-=5)}else a.push("Add Access-Control-Max-Age to cache preflight requests and improve performance"),n-=5;return"true"===d&&(h&&h.includes("authorization")||a.push("Consider explicitly allowing Authorization header when credentials are enabled")),n=Math.max(0,n),{corsEnabled:!0,crossOriginAllowed:c,headers:i,issues:r,recommendations:a,score:n}},checkCorsHeaders=(e,s)=>new Promise(((o,t)=>{try{const a=new URL(e);if(r=a.hostname,[/^localhost$/i,/^127\./,/^10\./,/^172\.(1[6-9]|2[0-9]|3[0-1])\./,/^192\.168\./,/^::1$/,/^fc00:/i,/^fe80:/i].some((e=>e.test(r))))return void t(new Error("Domain not allowed for security reasons"));const n={hostname:a.hostname,port:a.port||("https:"===a.protocol?443:80),path:a.pathname+a.search,method:"OPTIONS",headers:{Origin:s,"Access-Control-Request-Method":"POST","Access-Control-Request-Headers":"Content-Type, Authorization","User-Agent":"ToolzyHub-CorsChecker/1.0 (+https://toolzyhub.app)",Accept:"*/*",Connection:"close"},timeout:1e4},c=("https:"===a.protocol?https:http).request(n,(e=>{const s={};Object.keys(e.headers).forEach((o=>{s[o.toLowerCase()]=e.headers[o]})),o({statusCode:e.statusCode,headers:s}),e.on("data",(()=>{})),e.on("end",(()=>{}))}));c.on("error",(e=>{t(e)})),c.on("timeout",(()=>{c.destroy(),t(new Error("Request timeout"))})),c.end()}catch(e){t(e)}var r}));router.post("/check",basicRateLimit,(async(e,s)=>{try{const{originUrl:o,targetUrl:t}=e.body;if(!o||!t)return s.status(400).json({success:!1,message:"Both originUrl and targetUrl are required"});let r,a;try{if(r=new URL(o),!["http:","https:"].includes(r.protocol))throw new Error("Invalid origin URL protocol")}catch(e){return s.status(400).json({success:!1,message:"Invalid origin URL format"})}try{if(a=new URL(t),!["http:","https:"].includes(a.protocol))throw new Error("Invalid target URL protocol")}catch(e){return s.status(400).json({success:!1,message:"Invalid target URL format"})}const n=await checkCorsHeaders(a.toString(),r.toString()),c=analyzeCorsHeaders(n.headers,r.toString(),a.toString()),i={originUrl:r.toString(),targetUrl:a.toString(),statusCode:n.statusCode,...c,timestamp:(new Date).toISOString()};s.json({success:!0,data:i})}catch(e){let o="Failed to check CORS headers",t=500;e.message.includes("Domain not allowed")?(t=403,o="Domain not allowed for security reasons"):e.message.includes("timeout")?(t=408,o="Request timeout - server took too long to respond"):"ENOTFOUND"===e.code?(t=404,o="Domain not found"):"ECONNREFUSED"===e.code?(t=502,o="Connection refused by server"):"ECONNRESET"===e.code&&(t=502,o="Connection reset by server"),s.status(t).json({success:!1,message:o})}})),module.exports=router;